{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Ntweet.js","components/NtweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","name","setName","newAccount","setNewAccount","error","setError","onChange","event","target","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","then","userCredential","user","updateProfile","displayName","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Ntweet","ntweetObj","isOwner","editing","setEditing","text","newNtweet","setNewNtweet","toggleEditing","updateDoc","doc","id","photoUrl","src","alt","createdAt","creatorId","window","confirm","deleteDoc","deleteObject","ref","faTrash","faEdit","NtweetFactory","userObj","refPhoto","useRef","ntweet","setNtweet","photo","setPhoto","photoRef","uid","uuidv4","uploadString","response","getDownloadURL","addDoc","collection","Date","now","maxLength","for","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","e","current","Home","ntweets","setNtweets","useEffect","getData","onSnapshot","query","orderBy","snapshot","ntweetArray","docs","map","data","Profile","refreshUser","history","useHistory","length","newDisplayName","setNewDisplayName","signOut","push","Navigation","marginTop","to","marginLeft","display","flexDirection","alignItems","fontsize","faUser","AppRouter","isLoggedIn","exact","path","from","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3a4008b.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\"\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\n\ninitializeApp(firebaseConfig);\n\nexport const authService = getAuth();\nexport const dbService = getFirestore();\nexport const storageService = getStorage();\n\n//Being v9 in javascript, firebase code architecture changed.\n","import React, { useState } from 'react';\nimport { authService } from 'fbase';\nimport {\n\tcreateUserWithEmailAndPassword,\n\tsignInWithEmailAndPassword,\n\tupdateProfile,\n} from 'firebase/auth';\n\nconst AuthForm = () => {\n\t\n\tconst [email, setEmail] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [name, setName] = useState(\"\");\n\tconst [newAccount, setNewAccount] = useState(false);\n\tconst [error, setError] = useState(\"\");\n\tconst onChange = (event) => {\n\t\tconst {target: {name, value}} = event;\n\t\tif(name === \"email\"){\n\t\t\tsetEmail(value);\n\t\t} else if (name === \"password\"){\n\t\t\tsetPassword(value);\n\t\t} else if (name === \"name\"){\n\t\t\tsetName(value);\n\t\t}\n\t}\n\tconst onSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\ttry {\n\t\t\tif(newAccount){\n\t\t\t\t// create account\n\t\t\t\tawait createUserWithEmailAndPassword(authService, email, password).then((userCredential) => {\n\t\t\t\t\tconst user = userCredential.user;\n\t\t\t\t\tupdateProfile(user, {\n\t\t\t\t\t\tdisplayName: name,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// log in\n\t\t\t\tawait signInWithEmailAndPassword(authService, email, password);\n\t\t\t}\n\t\t\t\n\t\t} catch (error){\n\t\t\tsetError(error.message);\n\t\t}\n\t}\n\t\n\tconst toggleAccount = () => setNewAccount((prev) => !prev);\n\t\n\treturn (\n\t<>\n\t\t<form className=\"loginForm\" onSubmit={onSubmit}>\n\t\t\t<input \n\t\t\t\tname=\"email\" \n\t\t\t\ttype=\"text\" \n\t\t\t\tplaceholder=\"Email\" \n\t\t\t\trequired \n\t\t\t\tvalue={email} \n\t\t\t\tonChange={onChange}\n\t\t\t\tclassName=\"loginText\"\n\t\t\t/>\n\t\t\t<input \n\t\t\t\tname=\"password\" \n\t\t\t\ttype=\"password\" \n\t\t\t\tplaceholder=\"Password\" \n\t\t\t\trequired \n\t\t\t\tvalue={password} \n\t\t\t\tonChange={onChange}\n\t\t\t\tclassName=\"loginText\"\n\t\t\t/>\n\t\t\t{\n\t\t\t\tnewAccount && (\n\t\t\t\t\t<input \n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Name\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\tclassName=\"loginText\"\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t}\n\t\t\t<input className=\"loginText loginBtn\" type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\" }/>\n\t\t\t<span className=\"errorMessage\">{error}</span>\n\t\t</form>\n\t\t\t<span className=\"toggle\" onClick={toggleAccount}> {newAccount ? \"Log In\" : \"Create Account\"}</span>\n\t</>\n\t)\n}\n\nexport default AuthForm;","import React from 'react';\nimport { authService } from 'fbase';\nimport {\n\tGithubAuthProvider,\n\tGoogleAuthProvider,\n\tsignInWithPopup,\n} from 'firebase/auth';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n\tfaTwitter,\n\tfaGoogle,\n\tfaGithub,\n} from \"@fortawesome/free-brands-svg-icons\"\nimport AuthForm from 'components/AuthForm';\n\nconst Auth = () => {\n\t\n\tconst onSocialClick = async (event) => {\n\t\tconst {\n\t\t\ttarget : {name},\n\t\t} = event;\n\t\tlet provider;\n\t\tif(name === \"google\"){\n\t\t\tprovider = new GoogleAuthProvider();\n\t\t} else if (name === \"github\"){\n\t\t\tprovider = new GithubAuthProvider();\n\t\t}\n\t\tawait signInWithPopup(authService, provider);\n\t}\n\t\n\treturn (\n\t<div className=\"AuthBody\">\n\t\t\t<FontAwesomeIcon\n\t\t\t\ticon={faTwitter}\n\t\t\t\tcolor={\"#04AAFF\"}\n\t\t\t\tsize=\"3x\"\n\t\t\t\tstyle={{marginBottom: 30}}\n\t\t\t/>\n\t\t\t<AuthForm />\n\t\t<div className=\"auth\">\n\t\t\t<button className=\"socialButton\" name =\"google\" onClick={onSocialClick}>Continue with Google <FontAwesomeIcon icon={faGoogle} /></button>\n\t\t\t<button className=\"socialButton\" name =\"github\" onClick={onSocialClick}>Continue with Github <FontAwesomeIcon icon={faGithub} /></button>\n\t\t</div>\n\t</div>\t\t\n\t)\n}\nexport default Auth;","import React, { useState } from 'react';\nimport { dbService, storageService } from 'fbase';\nimport { deleteDoc, doc, updateDoc } from 'firebase/firestore';\nimport { deleteObject, ref } from 'firebase/storage';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Ntweet = ({ntweetObj, isOwner}) => {\n\tconst [editing, setEditing] = useState(false);\n\tconst [newNtweet, setNewNtweet] = useState(ntweetObj.text);\n\tconst onDeleteClick = () => {\n\t\tconst ok = window.confirm(\"Delete?\");\n\t\tif(ok){\n\t\t\t//delete\n\t\t\tdeleteDoc(doc(dbService, `ntweets/${ntweetObj.id}`));\n\t\t\tif(ntweetObj.photoUrl !== \"\"){\n\t\t\t\tdeleteObject(ref(storageService, ntweetObj.photoUrl));\n\t\t\t}\n\t\t}\n\t}\n\t\n\tconst toggleEditing = () => setEditing((prev) => !prev);\n\t\n\tconst onSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tupdateDoc(doc(dbService, `ntweets/${ntweetObj.id}`), \"text\", newNtweet);\n\t\tsetEditing(false);\n\t}\n\t\n\tconst onChange = (event) => {\n\t\tconst {target:{value}} = event;\n\t\tsetNewNtweet(value);\n\t}\n\t\n\treturn (\n\t<div className=\"ntweet\">\n\t\t{editing ? (\n\t\t\t\t<>\n\t\t\t\t<form className=\"editNtweetForm\" onSubmit={onSubmit}>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"editText\"\n\t\t\t\t\t\tvalue={newNtweet}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Edit your ntweet\"\n\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\trequired />\n\t\t\t\t\t<input className=\"editUpdate\" type=\"submit\" value=\"Update Ntweet\" /> \n\t\t\t\t</form>\n\t\t\t\t<button className=\"editCancel\" onClick={toggleEditing}>Cancel</button>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<span>{ntweetObj.text}</span>\n\t\t\t\t{ntweetObj.photoUrl && (\n\t\t\t\t <img src={ntweetObj.photoUrl} alt={ntweetObj.id} className=\"ntweetPhoto\" />\n\t\t\t\t )}\n\t\t\t\t\t<span>{ntweetObj.createdAt}</span>\n\t\t\t\t\t<span>{ntweetObj.creatorId}</span>\n\t\t\t\t\t{isOwner && (\n\t\t\t\t\t<div className=\"ntweetBtns\">\n\t\t\t\t\t\t<button className=\"deleteBtn\" onClick={onDeleteClick}>\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faTrash}/>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button className=\"editBtn\" onClick={toggleEditing}>\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faEdit}/>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</>\n\t\t\t)\n\t\t}\n\t</div>\n\t);\n}\n\nexport default Ntweet;","import React, { useState, useRef } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { storageService, dbService } from 'fbase';\nimport { addDoc, collection } from 'firebase/firestore'\nimport { ref, uploadString, getDownloadURL } from 'firebase/storage';\n\n\nconst NtweetFactory = ({ userObj }) => {\n\tconst refPhoto = useRef();\n\tconst [ntweet, setNtweet] = useState(\"\");\n\tconst [photo, setPhoto] = useState(\"\");\n\t\n\tconst onSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\tlet photoUrl = \"\";\n\t\t\n\t\tif(photo !== \"\"){\n\t\t\tconst photoRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\n\t\t\tconst response = await uploadString(photoRef, photo, \"data_url\");\n\t\t\tphotoUrl = await getDownloadURL(response.ref);\n\t\t}\n\t\t\t\t\n\t\tawait addDoc(collection(dbService, \"ntweets\"), {\n\t\t\ttext: ntweet,\n\t\t\tcreatedAt: Date.now(),\n\t\t\tcreatorId: userObj.uid,\n\t\t\tphotoUrl,\n\t\t});\n\t\t\n\t\tsetNtweet(\"\");\n\t\tsetPhoto(\"\");\n\t};\n\t\n\tconst onChange = (event) => {\n\t\tconst {\n\t\t\ttarget:{value}\n\t\t} = event; \n\t\tsetNtweet(value);\n\t};\n\t\n\tconst onFileChange = (event) => {\n\t\tconst {\n\t\t\ttarget: { files },\n\t\t} = event;\n\t\tconst theFile = files[0];\n\t\tconst reader = new FileReader();\n\t\treader.onloadend = (finishedEvent) => {\n\t\t\tconst {currentTarget: { result }} = finishedEvent;\n\t\t\tsetPhoto(result);\n\t\t}\n\t\ttry{\n\t\t\treader.readAsDataURL(theFile);\n\t\t} catch (e) {\n\t\t\t\n\t\t}\n\t}\n\t\n\tconst onClearClick = () => {\n\t\tsetPhoto(\"\");\n\t\trefPhoto.current.value = \"\";\n\t}\n\t\n\treturn (\n\t\t<form className=\"factoryContainer\" onSubmit={onSubmit}>\n\t\t\t<div className=\"factoryInputs\">\n\t\t\t\t<input \n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"What's on your mind?\"\n\t\t\t\t\tmaxLength={120}\n\t\t\t\t\tvalue={ntweet}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tclassName=\"ntweetText\"\n\t\t\t\t/>\n\t\t\t\t<input className=\"submitBtn\" type=\"submit\" value=\"→\" />\n\t\t\t</div>\n\t\t\t<label className=\"photoUploadBtn\" for=\"input-file\">\n  \t\t\t\tUpload Photo\n\t\t\t</label>\n\t\t\t<input id=\"input-file\" className=\"photoUploader\" type=\"file\" ref={refPhoto} accept=\"image/*\" onChange={onFileChange} />\n\t\t\t\n\t\t\t{photo && (\n\t\t\t\t<div className=\"uploadPhotoContainer\">\n\t\t\t\t\t<img src={photo} alt=\"uploadedPhoto\" className=\"ntweetUploadPhoto\" />\n\t\t\t\t\t<span className=\"photoClear\" onClick={onClearClick}>Clear</span>\n\t\t\t\t</div>\n\t\t\t)\n\t\t\t}\n\t\t</form>\n\t)\n}\nexport default NtweetFactory;","import React, { useState, useEffect } from 'react';\nimport { dbService } from 'fbase';\nimport { collection, onSnapshot, orderBy, query } from 'firebase/firestore'\nimport Ntweet from 'components/Ntweet';\nimport NtweetFactory from 'components/NtweetFactory';\n\nconst Home = ({userObj}) => {\n\t\n\tconst [ntweets, setNtweets] = useState([]);\n\t\n\tuseEffect(() => {\n\t\tconst getData = onSnapshot(query(collection(dbService, \"ntweets\"),orderBy(\"createdAt\", \"desc\")), (snapshot) => {\n\t\t\tconst ntweetArray = snapshot.docs.map(doc => ({\n\t\t\t\tid:doc.id,\n\t\t\t\t...doc.data(),\n\t\t\t}));\n\t\t\tsetNtweets(ntweetArray);\n\t\t});\n\t\treturn () => getData();\n\t}, []);\t\n\t\t\t\n\treturn (\n\t<div style={{\n\t\t\t\tmarginBottom: \"100px\",\n\t\t\t}}>\n\t\t<NtweetFactory userObj={userObj} />\n\t\t<div className=\"ntweets_container\">\n\t\t\t{ntweets.map((ntweet) => (\n\t\t\t\t<Ntweet key={ntweet.id} ntweetObj={ntweet} isOwner={ntweet.creatorId===userObj.uid} />\n\t\t\t))}\n\t\t</div>\n\t</div>\n\t);\n}\nexport default Home;","import React, { useState } from 'react';\nimport { authService } from 'fbase';\nimport { signOut } from 'firebase/auth';\nimport { useHistory } from 'react-router-dom';\nimport { updateProfile } from 'firebase/auth';\n\nconst Profile =  ({ userObj, refreshUser }) => {\n\tconst history = useHistory();\n\tconst [newDisplayName, setNewDisplayName] = useState(userObj?.displayName?.length ? userObj.displayName : \"\");\n\tconst onLogOutClick = () => {\n\t\tsignOut(authService);\n\t\thistory.push('/');\n\t};\n\t\n\tconst onChange = (event) => {\n\t\tconst {\n\t\t\ttarget: {value},\n\t\t} = event;\n\t\tsetNewDisplayName(value);\n\t}\n\t\n\tconst onSubmit = async(event) => {\n\t\tevent.preventDefault();\n\t\tif(userObj.displayName !== newDisplayName){\n\t\t\tawait updateProfile(userObj, {\n\t\t\t\tdisplayName:newDisplayName\n\t\t\t});\n\t\t}\n\t\trefreshUser();\n\t}\n\t\n\treturn (\n\t\t<>\n\t\t<form className=\"modifyProfile\" onSubmit={onSubmit}>\n\t\t\t<input \n\t\t\t\tclassName=\"editProfile\"\n\t\t\t\ttype=\"text\" \n\t\t\t\tplaceholder=\"Display Name\"\n\t\t\t\tonChange={onChange}\n\t\t\t\tvalue={newDisplayName}\n\t\t\t/>\n\t\t\t<input className=\"updateProfile\" type=\"submit\" value=\"Update Profile\" />\n\t\t</form>\n\t\t<button className=\"logOut\" onClick={onLogOutClick}>Log Out</button>\n\t\t</>\n\t);\n};\n\nexport default Profile;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n\tfaTwitter,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst Navigation = ({ userObj }) => <nav style={{\n\t\tmarginTop: \"100px\",\n\t}}\n>\n\t<ul>\n\t\t<li>\n\t\t\t<Link \n\t\t\t\tto='/'\n\t\t\t\tstyle={{\n\t\t\t\t\tmarginLeft: 10,\n\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\tfontsize: 12,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FontAwesomeIcon\n\t\t\t\ticon={faTwitter}\n\t\t\t\tcolor={\"#04AAFF\"}\n\t\t\t\tsize=\"2x\"\n\t\t\t\t/>\n\t\t\t\t<span className=\"profileText\">\n\t\t\t\t&nbsp;\n\t\t\t\t</span>\t\n\t\t\t</Link>\n\t\t</li>\n\t\t<li>\n\t\t\t<Link \n\t\t\t\tto='/profile'\n\t\t\t\tstyle={{\n\t\t\t\t\tmarginLeft: 10,\n\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\tfontsize: 12,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FontAwesomeIcon\n\t\t\t\ticon={faUser}\n\t\t\t\tcolor={\"#04AAFF\"}\n\t\t\t\tsize=\"2x\"\n\t\t\t\t/>\n\t\t\t\t<span className=\"profileText\">\n\t\t\t\t{\n\t\t\t\t\tuserObj?.displayName?.length ? \n\t\t\t\t\t`${userObj.displayName}'s Profile` : \n\t\t\t\t\t\"Profile\"\n\t\t\t\t}\n\t\t\t\t</span>\n\t\t\t</Link>\n\t\t</li>\n\t</ul>\n</nav>;\n\nexport default Navigation;","import React from 'react';\nimport {HashRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\nimport Auth from 'routes/Auth'\nimport Home from 'routes/Home'\nimport Profile from 'routes/Profile'\nimport Navigation from 'components/Navigation';\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n\treturn (\n\t\t<Router>\n\t\t\t{isLoggedIn && <Navigation userObj={userObj} />}\n\t\t\t<Switch>\n\t\t\t\t{isLoggedIn ? (\n\t\t\t\t<>\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<Home userObj={userObj} />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route exact path=\"/profile\">\n\t\t\t\t\t\t<Profile userObj={userObj} refreshUser={refreshUser} />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Redirect from=\"*\" to=\"/\" />\n\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<Auth />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Redirect from=\"*\" to=\"/\" />\n\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n};\n\nexport default AppRouter;","import React, { useState, useEffect } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from 'fbase';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport 'css/style.css';\nimport 'css/auth.css';\n\nfunction App() {\n\tconst [init, setInit] = useState(false);\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\n\tconst [userObj, setUserObj] = useState(null);\n\t\n\tconst refreshUser = () => {\n\t\tsetUserObj({...authService.currentUser});\n\t\tsetUserObj(authService.currentUser);\n\t}\n\t\n\tuseEffect(() => {\n\t\tonAuthStateChanged(authService,(user)=>{\n\t\t\tif(user){\n\t\t\t\tsetIsLoggedIn(true);\n\t\t\t\tsetUserObj(user);\n\t\t\t} else {\n\t\t\t\tsetIsLoggedIn(false);\n\t\t\t}\n\t\t\tsetInit(true);\n\t\t})\n\t}, [])\t\n\t\n\treturn (\n\t\t<>\n\t\t\t{ init ? (\n\t\t\t <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} refreshUser={refreshUser} />\n\t\t\t ) : \"Initializing...\"}\n\t\t</>\n\t); \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}